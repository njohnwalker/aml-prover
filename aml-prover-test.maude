in aml.maude

view ProverCMD from TRIV to AML-PROVER-COMMANDS is
    sort Elt to ProverCMD .
endv
    
mod INTERACTIVE-PROOF is
    including AML-PROVER .
    including LIST{ProverCMD} *
        ( sort List{ProverCMD} to CmdList
        , sort NeList{ProverCMD} to NeCmdList ) .

    op execInteractiveProof : CmdList -> ProofState .
    eq execInteractiveProof(CmdList) = $execInteractiveProof(CmdList, .ProofState) .

    op $execInteractiveProof : CmdList ProofState -> ProofState .
    eq $execInteractiveProof(nil, ProofState) = ProofState .
    eq $execInteractiveProof(Cmd CmdList, ProofState) = 
        $execInteractiveProof(CmdList,
          rewriteProofState(
            applyCommand(Cmd, ProofState)
            , unbounded)) .

    op getProof : ProofState ~> CommentedProof .
    eq getProof(ProofState ^ hilbertProof(Proof)) = Proof .

    op execAndCheckProof : CmdList ~> Bool .
    ceq execAndCheckProof(CmdList) = B:Bool
      if B:Bool :=
          check(
            stripComments(
              getProof(
                execInteractiveProof(
                  CmdList)))) .
    eq  execAndCheckProof(CmdList) = false [owise] .

    
    vars ProofState : ProofState .
    var Proof : CommentedProof .
    var Cmd : ProverCMD . var CmdList : CmdList .
endm

reduce execAndCheckProof(
  (begin proof of (def @ evar('x)) assuming definednessAxioms)
  ax
) .

quit